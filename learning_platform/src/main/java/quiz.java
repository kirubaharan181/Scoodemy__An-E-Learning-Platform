
import Project.ConnectionProvider;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JFrame;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author kirubaharan
 */
public class quiz extends javax.swing.JFrame {
    private String studentId;
    private String courseId;
    private int marks = 0;  // Initialize total marks
    private int correctOption;  // Correct option for the current question
    private ResultSet rs; 
    
    /**
     * Creates new form quiz
     */
    public quiz(String studentId, String courseId) {
        initComponents();
        this.studentId = studentId;
        this.courseId = courseId;
        loadQuizQuestions(courseId);  // Load quiz questions when quiz form opens
    }

    private quiz() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jRadioButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 300, 98, -1));

        jRadioButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 370, 130, 20));

        jRadioButton3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 440, 140, 20));

        jRadioButton4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(jRadioButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 520, 150, 20));

        jToggleButton1.setFont(new java.awt.Font("Monotype Corsiva", 2, 30)); // NOI18N
        jToggleButton1.setText("Submit");
        jToggleButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 590, 140, -1));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("                                QUIZ  TIME");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(472, 63, 550, 90));

        jButton1.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\kirubaharan\\Documents\\NetBeansProjects\\learning_platform\\src\\img1\\Close all jframe.png")); // NOI18N
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1360, 63, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1550, 170));

        jLabel3.setFont(new java.awt.Font("MV Boli", 1, 22)); // NOI18N
        jLabel3.setText("QUESTION");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, 980, 100));

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\kirubaharan\\Documents\\NetBeansProjects\\learning_platform\\src\\img1\\blue5.png")); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 1540, 650));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, 1550, 789));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed
       
    private void loadQuizQuestions(String courseId) {
    try {
        // Establish database connection
        Connection con = ConnectionProvider.getCon();
        
        // Get the current date
        java.sql.Date today = new java.sql.Date(System.currentTimeMillis());

        String checkSql = "SELECT COUNT(*) FROM quiz_attempts WHERE student_id = ? AND course_id = ? AND attempt_date = ?";
            PreparedStatement checkStmt = con.prepareStatement(checkSql);
            checkStmt.setString(1, studentId);  // Set studentId
            checkStmt.setString(2, courseId);    // Set courseId
            checkStmt.setDate(3, today);          // Set today's date
            ResultSet countRs = checkStmt.executeQuery();

            if (countRs.next() && countRs.getInt(1) > 0) {
                JOptionPane.showMessageDialog(null, "You have already attempted the quiz today.");
                return;
            }
            
        // Fetch the student's standard from the database
        String studentStandard = null;
        String standardSql = "SELECT stnd FROM student WHERE st_id = ?";
        PreparedStatement standardStmt = con.prepareStatement(standardSql);
        standardStmt.setString(1, studentId);  // Set studentId
        ResultSet studentRs = standardStmt.executeQuery();
        
        if (studentRs.next()) {
            studentStandard = studentRs.getString("stnd");
        } else {
            JOptionPane.showMessageDialog(null, "Student record not found.");
            return;
        }

        // Prepare SQL query to fetch today's questions for the matching course and standard
        String sql = "SELECT question_text, option_a, option_b, option_c, option_d, correct_option " +
                     "FROM Questions WHERE course_id = ? AND standard = ? AND q_date = ?";
        PreparedStatement pstmt = con.prepareStatement(sql);
        pstmt.setString(1, courseId);          
        pstmt.setString(2, studentStandard);   
        pstmt.setDate(3, today);              

        rs = pstmt.executeQuery();

        // Load the first question
        if (rs.next()) {
            displayQuestion();  // Display the first question
        } else {
            JOptionPane.showMessageDialog(null, "No quiz questions found for today or for your standard.");
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error fetching quiz questions: " + e.getMessage());
        e.printStackTrace();
    }
}

    
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        try {
            // Get the selected option from JRadioButtons
            int selectedOption = getSelectedOption();  // Helper method to get selected option

            // Compare with the correct option
            if (selectedOption == correctOption) {
                marks += 10;  // Add 10 points for correct answer
            }

            // Move to the next question
            if (rs.next()) {
                displayQuestion();  // Display the next question
            } else {
                // End of quiz
                saveQuizResults(studentId, courseId, marks);  // Save the results to the database
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error submitting quiz: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       // classroom cr = new classroom(studentId);
       //         cr.setExtendedState(JFrame.MAXIMIZED_BOTH);
       //         cr.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
   
    
 
    private void displayQuestion() throws SQLException {
        
        String question = rs.getString("question_text");
        String option1 = rs.getString("option_a");
        String option2 = rs.getString("option_b");
        String option3 = rs.getString("option_c");
        String option4 = rs.getString("option_d");
        correctOption = rs.getInt("correct_option");  // Store the correct option

        // Assuming you have GUI components for displaying the question and options
        jLabel3.setText(question);
        jRadioButton1.setText(option1);
        jRadioButton2.setText(option2);
        jRadioButton3.setText(option3);
        jRadioButton4.setText(option4);
    }

    
    private int getSelectedOption() {
        if (jRadioButton1.isSelected()) {
            return 1;
        } else if (jRadioButton2.isSelected()) {
            return 2;
        } else if (jRadioButton3.isSelected()) {
            return 3;
        } else if (jRadioButton4.isSelected()) {
            return 4;
        }
        return -1;  // No option selected
    }
    
    private void saveQuizResults(String studentId, String courseId, int marks) {
        try {
            Connection con = ConnectionProvider.getCon();
            // Insert the attempt into the quiz_attempts table
            String insertSql = "INSERT INTO quiz_attempts (student_id, course_id, attempt_date, marks) VALUES (?, ?, ?, ?)";
            PreparedStatement pstmt = con.prepareStatement(insertSql);
            pstmt.setString(1, studentId);
            pstmt.setString(2, courseId);
            pstmt.setDate(3, new java.sql.Date(System.currentTimeMillis()));  // Set today's date
            pstmt.setInt(4, marks);
            pstmt.executeUpdate();

            JOptionPane.showMessageDialog(null, "Quiz results saved successfully.");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
        
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                quiz qz = new quiz();
                qz.setExtendedState(JFrame.MAXIMIZED_BOTH);
                qz.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
