
import javax.swing.JFrame;
import Project.ConnectionProvider;
import java.io.File;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author kirubaharan
 */
public class teach_display extends javax.swing.JFrame {

    /**
     * Creates new form teach_display
     */
     public teach_display(String TeacherId,String TeacherName, String CourseId, String CourseName) {
        initComponents();
        id1.setText(TeacherId);
        t_name.setText(TeacherName);
        co_id.setText(CourseId);
        course.setText(CourseName);
        loadStudentsForTeacher();
    }
    
    public teach_display() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jToggleButton2 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        course = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        std_id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jFileChooser1 = new javax.swing.JFileChooser();
        jLabel3 = new javax.swing.JLabel();
        t_name = new javax.swing.JTextField();
        co_id = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        id1 = new javax.swing.JTextField();
        jToggleButton3 = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jToggleButton2.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jToggleButton2.setText("submit");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jToggleButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 162, -1));

        jLabel1.setFont(new java.awt.Font("Modern No. 20", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Stud_id");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 82, 32));
        jPanel2.add(course, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 147, 32));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Student_Id", "Course_Id", "Date", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 50, 420, -1));
        jPanel2.add(std_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, 150, 30));

        jLabel2.setFont(new java.awt.Font("Modern No. 20", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Course_id");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 110, 32));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Present", "Absent" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 380, -1, -1));

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });
        jPanel2.add(jFileChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 100, 550, 300));

        jLabel3.setFont(new java.awt.Font("Modern No. 20", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("course");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 82, 32));
        jPanel2.add(t_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 147, 32));
        jPanel2.add(co_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 147, 32));

        jLabel4.setFont(new java.awt.Font("Modern No. 20", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Name");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 82, 32));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Students_Id", "Students_Name"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 230, -1));

        id1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id1ActionPerformed(evt);
            }
        });
        jPanel2.add(id1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 130, -1));

        jToggleButton3.setFont(new java.awt.Font("Lucida Calligraphy", 0, 24)); // NOI18N
        jToggleButton3.setText("Create Test");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jToggleButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, 230, -1));

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("jLabel6");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1540, 670));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1620, 700));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 118, 1610, -1));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1383, 0, 1590, -1));

        jPanel4.setBackground(new java.awt.Color(0, 102, 51));
        jPanel4.setForeground(new java.awt.Color(0, 255, 204));

        jToggleButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jToggleButton1.setText("EXIT");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Algerian", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Scoodemy");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(606, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(533, 533, 533)
                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1610, 120));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
       teacher_login tl =new teacher_login();
       tl.setExtendedState(JFrame.MAXIMIZED_BOTH);
       tl.setVisible(true);
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        System.out.println("Button Pressed");  // Check if the method is triggered

    // Get input values from text fields
    String stud1 = std_id.getText();    // Student ID input from teacher
    String courseId = co_id.getText();  // Course ID already set from the teacher login module
    String status = jComboBox1.getSelectedItem().toString();  // Attendance status from comboBox

    if (stud1.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please enter a student ID.");
        return;
    }

    try {
        // Database connection
        Connection con = ConnectionProvider.getCon();

        // Check if the student is enrolled in the course
        String enrollmentCheckSql = "SELECT * FROM Enrollments WHERE st_id = ? AND course_id = ?";
        PreparedStatement enrollmentCheckStmt = con.prepareStatement(enrollmentCheckSql);
        enrollmentCheckStmt.setString(1, stud1);
        enrollmentCheckStmt.setString(2, courseId);
        ResultSet enrollmentCheckResult = enrollmentCheckStmt.executeQuery();

        if (!enrollmentCheckResult.next()) {
            JOptionPane.showMessageDialog(null, "Student is not enrolled in this course.");
            return;
        }

        // Check if attendance is already recorded for today
        String attendanceCheckSql = "SELECT * FROM Attendance WHERE st_id = ? AND course_id = ? AND attendance_date = CURDATE()";
        PreparedStatement attendanceCheckStmt = con.prepareStatement(attendanceCheckSql);
        attendanceCheckStmt.setString(1, stud1);
        attendanceCheckStmt.setString(2, courseId);
        ResultSet attendanceCheckResult = attendanceCheckStmt.executeQuery();

        if (attendanceCheckResult.next()) {
            JOptionPane.showMessageDialog(null, "Attendance already recorded for this student today.");
            return;
        }

        // Insert attendance record into Attendance table
        String sql = "INSERT INTO Attendance (st_id, course_id, attendance_date, status) VALUES (?, ?, NOW(), ?)";
        PreparedStatement pstmt = con.prepareStatement(sql);
        pstmt.setString(1, stud1);
        pstmt.setString(2, courseId);  // Use pre-set course ID
        pstmt.setString(3, status);
        pstmt.executeUpdate();

        JOptionPane.showMessageDialog(null, "Attendance recorded successfully.");
         DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        // Retrieve all attendance records for today and the specified course
        String retrieveSql = "SELECT st_id, course_id, attendance_date, status FROM Attendance WHERE course_id = ? AND attendance_date = CURDATE()";
        PreparedStatement retrieveStmt = con.prepareStatement(retrieveSql);
        retrieveStmt.setString(1, courseId);
        ResultSet rs = retrieveStmt.executeQuery();

        // Add each record to the JTable
        while (rs.next()) {
            String studentId = rs.getString("st_id");
            String retrievedCourseId = rs.getString("course_id");
            Date attendanceDate = rs.getDate("attendance_date");
            String attendanceStatus = rs.getString("status");

            model.addRow(new Object[]{studentId, retrievedCourseId, attendanceDate, attendanceStatus});
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error recording attendance: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
    
    // Set the dialog title
    fileChooser.setDialogTitle("Select a Video to Upload");

    // Set file selection mode (files only, not directories)
    fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

    // Show the open dialog and check if the user selects a file
    int result = fileChooser.showOpenDialog(this);
    
    if (result == JFileChooser.APPROVE_OPTION) {
        // Get the selected file
        File selectedFile = fileChooser.getSelectedFile();
        
        // Extract file details
        String filePath = selectedFile.getAbsolutePath();
        String fileName = selectedFile.getName();

        System.out.println("File Selected: " + filePath);

        // Insert file information into the database
        String courseId = co_id.getText();  // Assuming courseId is already set
        try {
            Connection con = ConnectionProvider.getCon();
            String sql = "INSERT INTO Videos (course_id, video_title, video_url) VALUES (?, ?, ?)";
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.setString(1, courseId);
            pstmt.setString(2, fileName);  // Use the file name as video title
            pstmt.setString(3, filePath);  // Store the file path as video URL
            pstmt.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Video uploaded successfully.");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error uploading video: " + e.getMessage());
            e.printStackTrace();
        }
    } else {
        // User canceled the file selection
        JOptionPane.showMessageDialog(null, "No video selected.");
    }
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void id1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id1ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
        String teacherSubject = co_id.getText(); // Retrieve from teacher's session or database
        String teacherId = id1.getText();      // Retrieve teacher's ID similarly

                create_quiz crqz = new create_quiz(teacherSubject, teacherId);
                crqz.setExtendedState(JFrame.MAXIMIZED_BOTH);
                crqz.setVisible(true);
        
    }//GEN-LAST:event_jToggleButton3ActionPerformed
    private void loadStudentsForTeacher() {
        String teacherId = id1.getText();
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel(); // Assuming jTable2 is the JTable for students

    model.setRowCount(0); // Clear any existing rows

    try {
        // Database connection
        Connection con = ConnectionProvider.getCon(); // Assuming you have a method for getting DB connection
        String sql = "SELECT s.st_id, s.name " +
                     "FROM Student s " +
                     "JOIN Enrollments e ON s.st_id = e.st_id " +
                     "JOIN Courses c ON e.course_id = c.course_id " +
                     "WHERE c.t_id = ?";
        PreparedStatement pstmt = con.prepareStatement(sql);
        pstmt.setString(1, teacherId); // Set the teacher ID parameter

        ResultSet rs = pstmt.executeQuery();

        // Loop through the result set and add rows to the table model
        while (rs.next()) {
            String studentId = rs.getString("st_id");
            String studentName = rs.getString("name");
            

            // Add the row to the JTable model
            model.addRow(new Object[]{studentId, studentName});
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error loading students: " + e.getMessage());
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(teach_display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(teach_display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(teach_display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(teach_display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                teach_display td =new teach_display();
               td.setExtendedState(JFrame.MAXIMIZED_BOTH);
               td.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField co_id;
    private javax.swing.JTextField course;
    private javax.swing.JTextField id1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JTextField std_id;
    private javax.swing.JTextField t_name;
    // End of variables declaration//GEN-END:variables
}
